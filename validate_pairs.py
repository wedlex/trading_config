import requests
import yaml

# üîπ –°—Å—ã–ª–∫–∞ –Ω–∞ YAML-—Ñ–∞–π–ª –Ω–∞ GitHub
GITHUB_YAML_URL = "https://raw.githubusercontent.com/wedlex/trading_config/main/active_pairs.yaml"

# üîπ –°—Å—ã–ª–∫–∞ –Ω–∞ Bybit API (–ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–∞—Ä)
BYBIT_API_URL = "https://api.bybit.com/v5/market/tickers?category=linear"

def load_yaml():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º active_pairs.yaml –∏–∑ GitHub"""
    response = requests.get(GITHUB_YAML_URL, timeout=10)
    response.raise_for_status()
    return yaml.safe_load(response.text)

def get_bybit_pairs():
    """–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∞—Ä –Ω–∞ Bybit"""
    response = requests.get(BYBIT_API_URL, timeout=10)
    response.raise_for_status()
    data = response.json()

    if "result" in data and "list" in data["result"]:
        return {item["symbol"] for item in data["result"]["list"]}

    return set()

def validate_pairs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–∞—Ä—ã –∏–∑ active_pairs.yaml –µ—Å—Ç—å –Ω–∞ Bybit"""
    yaml_data = load_yaml()
    bybit_pairs = get_bybit_pairs()

    active_pairs = set(yaml_data.get("pairs", {}).get("bybit", []))  # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–∞—Ä—ã Bybit
    invalid_pairs = active_pairs - bybit_pairs  # –ö–∞–∫–∏–µ –ø–∞—Ä—ã —É–∫–∞–∑–∞–Ω—ã, –Ω–æ –∏—Ö –Ω–µ—Ç –Ω–∞ –±–∏—Ä–∂–µ

    if invalid_pairs:
        print(f"‚ùå –û—à–∏–±–∫–∞! –≠—Ç–∏ –ø–∞—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞ Bybit: {invalid_pairs}")
    else:
        print("‚úÖ –í—Å–µ –ø–∞—Ä—ã –≤ active_pairs.yaml —Å—É—â–µ—Å—Ç–≤—É—é—Ç –Ω–∞ Bybit!")

# üîπ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
validate_pairs()
